<template>
  <global-view bgImage="/static/images/common/global_bg@x2.png">
    <view class="account-container">
      <view class="account line-gap">
        <view class="login-box">
          <template v-if="userStore.userInfo">
            <u-avatar
              :src="userStore.userInfo?.avatar"
              size="96rpx"
              mode="aspectFill"
            />
            <view class="account-msg">
              <u--text
                :lines="1"
                :bold="true"
                size="40rpx"
                :text="userStore.userInfo?.nickname || '这家伙很懒'"
              ></u--text>
              <text class="last-child"
                >ID:{{ userStore.userInfo?.account }}</text
              >
            </view>
          </template>
          <template v-else>
            <u-avatar
              src="/static/images/my/icon_avatar.png"
              size="96rpx"
              mode="aspectFill"
              @click="toLogin()"
            />
            <view class="account-msg" @click="toLogin()">
              <text class="first-child">登录/注册</text>
              <text class="last-child">登录后享受更多服务～</text>
            </view>
          </template>
        </view>
        <view class="setting" @click.stop="navigateToSettings">
          <u--image
            width="58rpx"
            height="58rpx"
            src="/static/images/my/icon_settings.png"
          />
        </view>
      </view>

      <account-contract class="line-gap" />
      <account-category
        class="line-gap"
        :list="sellList"
        title="我卖出的"
        value="去发布"
        url="/pages/sell-account/index"
        @change="handleSellAccountChange"
      />

      <account-category
        class="line-gap"
        :list="buyList"
        title="我买到的"
        value="去购买"
        url="/pages/buy-account/index"
        @change="handleBuyAccountChange"
      />
      <!-- seller -->
      <view class="wallet-box line-gap" @click="handleBalancePayouts">
        <view class="icon-box">
          <view class="icon">
            <u--image
              width="48rpx"
              height="48rpx"
              src="/static/images/my/icon_wallet.png"
            />
          </view>
          <text class="text">我的余额</text>
        </view>
        <view class="num-box">
          <text class="text">{{ userStore.platformCurrency }}元</text>
          <u--image
            width="40rpx"
            height="40rpx"
            src="/static/images/my/icon_wallet_right.png"
          />
        </view>
      </view>
      <account-settings />
    </view>
  </global-view>
</template>

<script setup lang="ts">
import { ref, watch } from "vue";
import { onShow } from "@dcloudio/uni-app";
import GlobalView from "@/components/global-view/index.vue";
import AccountContract from "@/components/account-contract/index.vue";
import AccountCategory from "@/components/account-category/index.vue";
import AccountSettings from "@/components/account-settings/index.vue";
import { useUserStore } from "@/stores/user";
import { checkIsLogin, toLogin } from "@/utils/login";
import Events, { report } from "@/utils/report/report";

const userStore = useUserStore();

const sellList = ref([
  {
    tabIndex: 1,
    title: "已上架",
    icon: "listing",
    msg: 0,
  },
  {
    tabIndex: 2,
    title: "交易中",
    icon: "transaction",
    msg: 0,
  },
  {
    tabIndex: 3,
    title: "已出售",
    icon: "sold",
    msg: 0,
  },
  {
    tabIndex: -1,
    title: "收到出价",
    icon: "received_bid",
    msg: 0,
  },
  {
    tabIndex: 0,
    title: "商品管理",
    icon: "product_management",
    msg: 0,
  },
]);
const buyList = ref([
  {
    tabIndex: 1,
    title: "待付款",
    icon: "pay",
    msg: 0,
  },
  {
    tabIndex: 2,
    title: "待发货",
    icon: "transaction",
    msg: 0,
  },
  {
    tabIndex: 3,
    title: "已成交",
    icon: "sold",
    msg: 0,
  },
  {
    tabIndex: -1,
    title: "我的砍价",
    icon: "received_bid",
    msg: 0,
  },
  {
    tabIndex: 0,
    title: "全部订单",
    icon: "product_management",
    msg: 0,
  },
]);
// 我卖到的
const handleSellAccountChange = ({ tabIndex }) => {
  const url =
    tabIndex === -1
      ? `/pages/bargain/list?bidder=seller`
      : `/pages/my/posted-center/index?status=${tabIndex}`;
  uni.navigateTo({
    url: url,
  });
};
// 我买到的
const handleBuyAccountChange = ({ tabIndex }) => {
  const url =
    tabIndex === -1
      ? `/pages/bargain/list?bidder=buyer`
      : `/pages/order/list?status=${tabIndex}`;
  uni.navigateTo({
    url: url,
  });
};
// 设置
const navigateToSettings = () => {
  uni.navigateTo({
    url: "/pages/my/settings-center/index",
  });
};

// 我的余额
const handleBalancePayouts = () => {
  report(Events.MY_BALANCE);
  uni.navigateTo({
    url: "/pages/my/balance-payouts/index",
  });
};

onShow(() => {
  uni.log.info("进入");
  userStore.init();
  initBargainMsg();
});
const initBargainMsg = () => {
  if (checkIsLogin()) {
    userStore.getMyInfoV2({ order_unread_resp: true });
  } else {
    //退出登录
    userStore.setBargainBuyerUnread(0);
    userStore.setBargainSellerUnread(0);
  }
};

watch(
  () => userStore.bargainSellerUnread,
  () => {
    sellList.value[3].msg = userStore.bargainSellerUnread;
  },
  { immediate: true }
);

watch(
  () => userStore.bargainBuyerUnread,
  () => {
    buyList.value[3].msg = userStore.bargainBuyerUnread;
  },
  { immediate: true }
);
</script>
<style lang="scss" scoped>
@import "@/static/style/customicons.scss";
.account-container {
  // display: flex;
  // flex-direction: column;
  // flex: 1;
  margin-bottom: 20rpx;
  padding: 20rpx;

  .line-gap {
    margin-bottom: 16rpx;
  }
  .account-msg {
    margin-left: 20rpx;
  }
  .wallet-box {
    background: linear-gradient(to bottom, #f5fffe, #ffffff);
    padding: 24rpx;
    @include flex(row);
    align-items: center;
    justify-content: space-between;
    .icon-box {
      @include flex(row);
      align-items: center;
      justify-content: center;
      .icon {
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .text {
        font-weight: 400;
        font-size: 28rpx;
        color: #1a1a1a;
        margin-left: 16rpx;
      }
    }
    .num-box {
      @include flex(row);
      align-items: center;
      justify-content: center;
      .text {
        font-weight: 500;
        font-size: 32rpx;
        color: $app-main-color;
      }
    }
  }
  .account {
    height: 160rpx;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    .login-box {
      @include flex;
      align-items: center;
      justify-content: center;
    }
    &-avatar {
      margin-right: 20rpx;
    }
    &-msg {
      flex: 1;
      .first-child {
        font-weight: 600;
        font-size: 40rpx;
        color: rgba(0, 0, 0, 0.84);
        line-height: 48rpx;
        font-style: normal;
      }
      .last-child {
        font-size: 32rpx;
        margin-top: 8rpx;

        font-family:
          PingFang SC,
          PingFang SC;
        font-weight: 400;
        font-size: 24rpx;
        color: #606060;
        line-height: 28rpx;
        font-style: normal;
      }
    }
  }
  .setting {
    height: 80rpx;
  }
}
</style>
