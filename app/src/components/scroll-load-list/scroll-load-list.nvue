<template>
  <view class="scroll-load-list">
    <scroll-view class="list-container" scroll-y @scrolltolower="loadMore">
      <view v-for="(item, index) in dataList" :key="index" class="list-item">
        <!-- 显示列表项的内容 -->
        {{ item }}
      </view>
      <view v-if="loading" class="loading">Loading...</view>
    </scroll-view>
  </view>
</template>

<script setup lang="ts">
import { reactive } from "vue";

const tableData = reactive({
  dataList: [], // 存储列表数据
  loading: false, // 是否正在加载数据
  page: 1, // 当前页数
  pageSize: 10, // 每页数据条数
});

const loadData = () => {
  // 这里可以是异步请求数据的操作，这里用 setTimeout 模拟异步请求
  setTimeout(() => {
    // 模拟获取到的新数据
    const newData = Array.from(
      { length: tableData.pageSize },
      (_, index) => `Item ${index + 1}`
    );
    // 将新数据追加到 dataList 中
    tableData.dataList = [...tableData.dataList, ...newData];
    // 加载完成，loading 状态设为 false
    tableData.loading = false;
  }, 1000);
};

const loadMore = () => {
  if (!tableData.loading) {
    // 加载状态设为 true，防止重复加载
    tableData.loading = true;
    // 模拟加载数据
    this.loadData();
  }
};
</script>

<style scoped>
.scroll-load-list {
  width: 100%;
  height: 100%;
}

.list-container {
  height: 100%;
}

.list-item {
  height: 100px; /* 根据需要设置列表项高度 */
  line-height: 100px;
  text-align: center;
  border-bottom: 1px solid #eee;
}

.loading {
  text-align: center;
  padding: 20px;
}
</style>
